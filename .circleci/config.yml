# .circleci/config.yml
nodeimage: &nodeimage
  docker:
      - image: node:8.9.4-alpine

nodestepsite: &nodestepsite
  steps:
      - checkout
      - run:
          name: Add Dependencies
          command: apk add --no-cache curl git
      - run:
          name: Install & Build Project luna-frontend
          command: cd luna-frontend && yarn install && CI=false yarn build

nodestepsandy: &nodestepsandy
  steps:
      - checkout
      - run:
          name: Add Dependencies
          command: apk add --no-cache curl git
      - run:
          name: Install & Build Project luna-sandy
          command: cd luna-sandy && yarn install

pythonimage: &pythonimage
  docker:
      - image: python:3.7-alpine

pythonstep: &pythonstep
  steps:
      - checkout
      - run:
          name: Add Dependencies
          command: apk update && apk add --virtual build-deps gcc python-dev musl-dev && apk add --no-cache curl git postgresql-dev bash
      - run:
          name: Install & Build project luna-api-django
          command: cd luna-api-django && pip install --upgrade pip && pip install pipenv && pipenv install --deploy --system

installdocker: &installdocker
  name: Install Docker client
  command: |
    set -x
    VER="18.03.1-ce"
    curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
    tar -xz -C /tmp -f /tmp/docker-$VER.tgz
    mv /tmp/docker/* /usr/bin

filterrepo: &filterrepo 
  filters:
    branches:
      only: 
        - develop
        - master
deployprod: &deployprod
  requires:
    - deploy-to-dev
  filters:
    branches:
        only: master

version: 2
jobs:
  install-site:
    <<: *nodeimage
    <<: *nodestepsite
  
  test-lint-site:
    <<: *nodeimage
    <<: *nodestepsite
      - run: 
          name: Test-lint Project
          command: echo "This Test-lint Space"

  test-unit-site:
    <<: *nodeimage
    <<: *nodestepsite
      - run: 
          name: Test-unit Project
          command: echo "This Test-unit Space"
        
  test-coverage-site:
    <<: *nodeimage
    <<: *nodestepsite
      - run: 
          name: Test-coverage Project
          command: echo "This Test-coverage Space"

  install-api-django:
    <<: *pythonimage
    <<: *pythonstep
   
  test-lint-api-django:
    <<: *pythonimage
    <<: *pythonstep
      - run: 
          name: Test-lint Project
          command: echo "This Test-lint Space"

  test-unit-api-django:
    <<: *pythonimage
    <<: *pythonstep
      - run: 
          name: Test-unit Project
          command: echo "This Test-unit Space"
            
  test-coverage-api-django:
    <<: *pythonimage
    <<: *pythonstep
      - run: 
          name: Test-coverage Project
          command: echo "This Test-coverage Space"      
        
  install-sandy:
    <<: *nodeimage
    <<: *nodestepsandy
  
  test-lint-sandy:
    <<: *nodeimage
    <<: *nodestepsandy
      - run: 
          name: Test-lint Project
          command: echo "This Test-lint Space"

  test-unit-sandy:
    <<: *nodeimage
    <<: *nodestepsandy
      - run: 
          name: Test-unit Project
          command: echo "This Test-unit Space"
        
  test-coverage-sandy:
    <<: *nodeimage
    <<: *nodestepsandy
      - run: 
          name: Test-coverage Project
          command: echo "This Test-coverage Space"

  build-docker-site:
    <<: *nodeimage
    <<: *nodestepsite
      - setup_remote_docker: 
          docker_layer_caching: true
      - run:
          <<: *installdocker
      - run: 
          name: Build and Push Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t penthaizza/lunaproject:$(echo "site-"$(git rev-parse --short HEAD)) ./luna-frontend
            docker tag penthaizza/lunaproject:$(echo "site-"$(git rev-parse --short HEAD)) penthaizza/lunaproject:site-latest
            docker push penthaizza/lunaproject
  build-docker-api-django:
    <<: *pythonimage
    <<: *pythonstep
      - setup_remote_docker: 
          docker_layer_caching: true
      - run:
          <<: *installdocker
      - run: 
          name: Build and Push Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t penthaizza/lunaproject:$(echo "api-"$(git rev-parse --short HEAD)) ./luna-api-django
            docker tag penthaizza/lunaproject:$(echo "api-"$(git rev-parse --short HEAD)) penthaizza/lunaproject:api-latest 
            docker push penthaizza/lunaproject
  build-docker-sandy:
    <<: *nodeimage
    <<: *nodestepsandyl
      - setup_remote_docker: 
          docker_layer_caching: true
      - run:
          <<: *installdocker
      - run: 
          name: Build and Push Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t penthaizza/lunaproject:$(echo "sandy-"$(git rev-parse --short HEAD)) ./luna-sandy
            docker tag penthaizza/lunaproject:$(echo "sandy-"$(git rev-parse --short HEAD)) penthaizza/lunaproject:sandy-latest
            docker push penthaizza/lunaproject

  deploy-to-dev:
    machine: true
    steps:
      - run: 
          name: Deploy to DEV-Site-Server
          command: | 
            sudo apt-get update
            sudo apt-get install sshpass
            sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker rm -f luna-site && sudo docker image prune -a -f && sudo docker run -d -p 3000:3000 -p 22200:22200 -p 17000:17000 --name luna-site penthaizza/lunaproject:site-latest"
      - run:
          name: Deploy to DEV-API-Django-Server
          command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker rm -f luna-api && sudo docker image prune -a -f && sudo docker run -d -p 8000:8000 --name luna-api penthaizza/lunaproject:api-latest"
      - run:
          name: Deploy to DEV-Sandy-Server
          command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker rm -f luna-sandy && sudo docker image prune -a -f && sudo docker run -d -p 3020:3020 -p 22203:22203 -p 17003:17003 --name luna-sandy penthaizza/lunaproject:sandy-latest"  
  deploy-to-prod-site:
    machine: true
    steps:
      - run: 
          name: Deploy to Prod-Site-Server
          command: | 
            sudo apt-get update
            sudo apt-get install sshpass
            sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$PROD_SERVER "ls -a && sudo docker rm -f luna-site && sudo docker image prune -a -f && sudo docker run -d -p 3000:3000 -p 22200:22200 -p 17000:17000 --name luna-site penthaizza/lunaproject:site-latest"
  deploy-to-prod-api-django:
    machine: true
    steps:
      - run:
          name: Deploy to Prod-API-Server
          command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$PROD_SERVER "ls -a && sudo docker rm -f luna-api && sudo docker image prune -a -f && sudo docker run -d -p 8000:8000 --name luna-api penthaizza/lunaproject:api-latest"
  deploy-to-prod-sandy:
    machine: true
    steps:
      - run:
          name: Deploy to Prod-API-Server
          command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$PROD_SERVER "ls -a && sudo docker rm -f luna-sandy && sudo docker image prune -a -f && sudo docker run -d -p 3020:3020 -p 22203:22203 -p 17003:17003 --name luna-sandy penthaizza/lunaproject:sandy-latest"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - install-site:
          <<: *filterrepo
      - install-api-django:
          <<: *filterrepo    
      - install-sandy:
          <<: *filterrepo

      - test-lint-site:
          requires:
            - install-site
          <<: *filterrepo
      - test-unit-site:
          requires:
            - test-lint-site
          <<: *filterrepo
      - test-coverage-site:
          requires:
            - test-unit-site
          <<: *filterrepo
      
      - test-lint-api-django:
          requires:
            - install-api-django
          <<: *filterrepo
      - test-unit-api-django:
          requires:
            - test-lint-api-django
          <<: *filterrepo
      - test-coverage-api-django:
          requires:
            - test-unit-api-django
          <<: *filterrepo
      
      - test-lint-sandy:
          requires:
            - install-sandy
          <<: *filterrepo
      - test-unit-sandy:
          requires:
            - test-lint-sandy
          <<: *filterrepo
      - test-coverage-sandy:
          requires:
            - test-unit-sandy
          <<: *filterrepo
      
      - build-docker-site:
          requires:
            - install-site
            - test-lint-site
            - test-unit-site
            - test-coverage-site
          <<: *filterrepo
      - build-docker-api-django:
          requires:
            - install-api-django
            - test-lint-api-django
            - test-unit-api-django
            - test-coverage-api-django       
          <<: *filterrepo
      - build-docker-sandy:
          requires:
            - install-sandy
            - test-lint-sandy
            - test-unit-sandy
            - test-coverage-sandy       
          <<: *filterrepo

      - deploy-to-dev:
          requires:
            - build-docker-site
            - build-docker-api-django
            - build-docker-sandy
          <<: *filterrepo

      - deploy-to-prod-site:
          <<: *deployprod
      - deploy-to-prod-api-django:
          <<: *deployprod
      - deploy-to-prod-sandy:
          <<: *deployprod